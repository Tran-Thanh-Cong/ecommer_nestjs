version: '3.8'

services:
  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - '3309:3306'
    command: --init-file /docker-entrypoint-initdb.d/init.sql
    volumes:
      - ./initdb.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql-data:/var/lib/mysql
    restart: always
    env_file:
      - .env
    environment:
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE = ${DB_DATABASE}
    networks:
      default:

  redis:
    container_name: redis
    image: redis:6.2
    ports:
      - 6380:6379
    volumes:
      - ./redis:/data
    networks:
      default:

  dev:
    container_name: ecommerce-nestjs-dev
    image: ecommerce-nestjs-dev
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:dev
    ports:
      - ${PORT}:5000
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis
    env_file:
      - .env
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    restart: always
    networks:
      default:

  prod:
    container_name: ecommerce-nestjs-prod
    image: ecommerce-nestjs-prod
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - ${PORT}:5000
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis
    env_file:
      - .env
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    restart: always
    networks:
      default:

networks:
  nestjs:

volumes:
  redis:
    driver: local
  mysql-data:
